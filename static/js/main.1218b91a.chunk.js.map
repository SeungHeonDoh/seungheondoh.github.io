{"version":3,"sources":["blocks/header/Header.js","blocks/footer/Footer.js","components/button/LinkButton.js","blocks/peopleCard/Prof.js","blocks/news/News.js","blocks/publicationTable/PublicationTable.js","blocks/experience/Exp.js","blocks/education/Edu.js","pages/Home.js","pages/Blog.js","App.js","serviceWorker.js","index.js"],"names":["Header","console","log","window","location","pathname","id","className","title","href","Footer","LinkButton","keyword","link","position","textcolor","backgroundcolor","config","Prof","ProfData","map","item","src","img","alt","describtion","detail","Object","keys","material","key_name","index","News","NewsInfoData","date","contents","PublicationTable","props","onFilterChange","newFilter","publicationTable_items_name","grid","undefined","iso","Isotope","itemSelector","masonry","horizontalOrder","arrange","filter","bind","state","selected","list","PublicationMenuData","i","e","preventDefault","this","setState","listCount","length","key","Fragment","onClick","event","handleClick","ref","c","PublicationItemData","category","Authors","bookTitle","Component","Exp","ExpInfoData","Experience","Talk","Teaching","Edu","EduInfoData","school","advisor","duration","Home","document","body","classList","add","charSet","rel","httpEquiv","content","name","Blog","App","basename","process","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1218b91a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    console.log(window.location.pathname)\r\n    return (\r\n        <header id=\"header\" className=\"site-header\">\r\n            <div className=\"wrapper d-flex justify-content-between\">\r\n                <div className=\"align-self-center\">\r\n                    <p>  </p> \r\n                </div>\r\n\r\n                <nav className=\"menu-third\">\r\n                    <ul className=\"clearfix list-unstyled\">\r\n                        <li className={ \"menu-item\" + ( window.location.pathname === '/' ? \" current-menu-item\" : \"\" ) }>\r\n                            <a \r\n                                title=\"Home\"\r\n                                className=\"btn btn-link transform-scale-h border-0 p-0\"\r\n                                href=\"#/\">Curriculum Vitae</a>\r\n                        </li>\r\n                        <li className={ \"menu-item\" + ( window.location.pathname === '#/blog' ? \" current-menu-item\" : \"\" ) }>\r\n                            <a \r\n                                title=\"blog\" \r\n                                className=\"btn btn-link transform-scale-h border-0 p-0\"\r\n                                href=\"#/blog\">Blog</a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"site-footer\">\r\n            <div className=\"wrapper no-space\">\r\n                <div className=\"row\">\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst LinkButton = ({keyword, link, position, textcolor, backgroundcolor}) => {\r\n    const config = `btn ${position} has-text-color ${textcolor} has-background ${backgroundcolor}`\r\n    return (\r\n            <a href={link} className={config}>\r\n                <b>{keyword}</b>\r\n            </a>\r\n    );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from 'react';\nimport LinkButton from '../../components/button/LinkButton';\nconst Prof = ({ProfData}) => { \n    return (\n        <section id=\"page-content\" className=\"spacer\">\n            <div className=\"peoplecard\">\n                <div className=\"wrapper\">\n                    <div className=\"prof_cardwrapper\">\n                        {ProfData.map((item) => {\n                            return (\n                                <div className=\"img_div\">\n                                    <img className=\"prof_img\" src={process.env.PUBLIC_URL + `/assets/img/people/`+ item.img} alt={item.title}/>\n                                    <div className=\"info_div\">\n                                        <h4>{item.title}</h4>\n                                        <p>{item.describtion} <br/> {item.detail}</p>\n                                        <div className=\"btn_div\">\n                                            {Object.keys(item.material).map((key_name, index) => {\n                                                if (index === 0){\n                                                    return(\n                                                        <LinkButton \n                                                            keyword = {key_name} \n                                                            link={item.material[key_name]}\n                                                            position = \"\"\n                                                            textcolor = \"has-white-color\"\n                                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                                        />\n                                                    );\n                                                } else {\n                                                    return(\n                                                        <LinkButton \n                                                            keyword = {key_name} \n                                                            link={item.material[key_name]}\n                                                            position = \"inline\"\n                                                            textcolor = \"has-white-color\"\n                                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                                        />\n                                                    );\n                                                }\n                                            })\n                                            }\n\n                                        </div>\n\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Prof;\n","import React from 'react';\n\nconst News = ({NewsInfoData}) => {\n    return (\n        <section id=\"page-content\" className=\"spacer p-top-lg p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"news wrapper\">\n                    <h4>News</h4>\n                    <ul>\n                    {NewsInfoData.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <li> {item.date} | {item.contents}</li>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <li>{item.date}, <a href={item.link}>[Link]</a></li>\n                                </>\n                            );\n                        }\n                    } ) }\n                    </ul>\n                    <hr/>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default News;\n","import React, { Component } from 'react';\nimport Isotope from 'isotope-layout';\nimport LinkButton from '../../components/button/LinkButton';\nimport PublicationMenuData from '../../data/publication/publicationMenu.json';\nimport PublicationItemData from '../../data/publication/publicationItems.json';\n\n\nclass PublicationTable extends Component {\n    constructor( props ) {\n        super( props );\n        this.onFilterChange = this.onFilterChange.bind( this );\n\n        this.state = {\n            selected: 0,\n            list: PublicationMenuData\n        };\n    }\n\n    handleClick( i, e ) {\n        e.preventDefault();\n\n        this.setState( {\n            selected: i\n        } );\n\n        return false\n    }\n\n    onFilterChange = ( newFilter ) => {\n        const publicationTable_items_name = this.grid;\n        const publicationTable_item_name  = '.publicationTable-item';\n\n        if ( this.iso === undefined ) {\n            this.iso = new Isotope( publicationTable_items_name, {\n                itemSelector: publicationTable_item_name,\n                masonry: {\n                    horizontalOrder: true\n                }\n            } );\n        }\n\n        if ( newFilter === '*' ) {\n            this.iso.arrange( { filter: `*` } );\n\n        } else {\n            this.iso.arrange( { filter: `.${ newFilter }` } );\n        }\n    };\n\n    componentDidMount() {\n    }\n\n    render() {\n        const listCount = this.state.list.length - 1;\n\n        return (\n            <div className=\"publicationTable spacer p-bottom-lg\">\n                <div className=\"wrapper\">\n                    <h4>Publications</h4>\n                    <ul className=\"publicationTable-filter\">\n                        { this.state.list.map( ( item, key ) => (\n                            <React.Fragment key={ key }>\n                                <li>\n                                    <span title={ item.title }\n                                       className={ \"btn btn-link transform-scale-h click\" + ( key === this.state.selected ? ' active' : '' ) }\n                                       data-filter={ item.filter }\n                                       onClick={ ( event ) => {\n                                           this.onFilterChange( item.filter );\n                                           this.handleClick( key, event )\n                                       } }>\n                                        {item.title}\n                                    </span>\n                                </li>\n\n                                { key !== listCount ?\n                                    <li>\n                                        <span className=\"btn btn-link\">-</span>\n                                    </li>\n                                    : \"\"\n                                }\n                            </React.Fragment>\n                        ) ) }\n                    </ul>\n                <div className={\"publicationTable-item-wrapper\"} >\n                    <div className=\"publicationTable-items\" ref={ ( c ) => this.grid = c }>\n                        { PublicationItemData && PublicationItemData.map( ( item, key ) => {\n                            if (item.material === \"\"){\n                                return (\n                                    <div key={ key } title={ item.title } className={ \"publicationTable-item active \" + item.category }>\n                                        <h6>{ item.title }</h6>\n                                        <p>{ item.Authors }</p>\n                                        <p className=\"date\">{ item.bookTitle }</p>\n                                    </div>\n                                );\n                            } else {\n                                return (\n                                    <div key={ key } title={ item.title } className={ \"publicationTable-item active \" + item.category }>\n                                        <h6>{ item.title }</h6>\n                                        <p>{ item.Authors }</p>\n                                        <p className=\"date\">{ item.bookTitle }</p>\n                                        {Object.keys(item.material).map((key_name, index) => {\n                                            if (index === 0){\n                                                return(\n                                                    <LinkButton \n                                                        keyword = {key_name} \n                                                        link={item.material[key_name]}\n                                                        position = \"\"\n                                                        textcolor = \"has-white-color\"\n                                                        backgroundcolor = \"has-gray-dark-background-color\"\n                                                    />\n                                                );\n                                            } else {\n                                                return(\n                                                    <LinkButton \n                                                        keyword = {key_name} \n                                                        link={item.material[key_name]}\n                                                        position = \"inline\"\n                                                        textcolor = \"has-white-color\"\n                                                        backgroundcolor = \"has-gray-dark-background-color\"\n                                                    />\n                                                );\n                                            }\n                                        })\n                                        }\n                                    </div>\n                                );\n                            }\n                        })}\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PublicationTable;\n","import React from 'react';\nimport LinkButton from '../../components/button/LinkButton'\n\nconst Exp = ({ExpInfoData}) => {\n    const Experience = ExpInfoData['Experience']\n    const Talk = ExpInfoData['Talk']\n    const Teaching = ExpInfoData['Teaching']\n    return (\n        <section id=\"page-content\" className=\"spacer p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"wrapper\">\n                    <h4>Experience, Talk, Teaching</h4>\n                    <div className=\"experience\">\n                    <h6>Experience</h6>\n                    \n                    {Experience.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n                    <h6>Talk</h6>\n                    \n                    {Talk.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n\n                    <h6>Teaching</h6>\n                    \n                    {Teaching.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n                    \n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Exp;\n","import React from 'react';\n\nconst Edu = ({EduInfoData}) => {\n    console.log(EduInfoData);\n    return (\n        <section id=\"page-content\" className=\"spacer p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"eduacation wrapper\">\n                    <h4>Education</h4>\n                    <div className=\"eduacation\">\n                    { EduInfoData.map((item) => {\n                            return (\n                                <>\n                                    <h6>{ item.school }</h6>\n                                    <p>{ item.position } {item.advisor !== \"\" ? (<p>{ item.advisor }</p>) : null}</p>\n                                    <p className=\"date\">{ item.duration }</p>\n                                </>\n                            );\n                        } ) }\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default Edu;\n","import React, { Fragment } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\n\r\nimport Header from '../blocks/header/Header';\r\nimport Footer from '../blocks/footer/Footer';\r\n\r\nimport Prof from '../blocks/peopleCard/Prof'\r\nimport ProfData from '../data/people/prof.json'\r\n\r\nimport News from '../blocks/news/News'\r\nimport NewsInfoData from '../data/news/newsinfo.json';\r\n\r\nimport PublicationTable from '../blocks/publicationTable/PublicationTable';\r\n\r\nimport Exp from \"../blocks/experience/Exp\"\r\nimport ExpInfoData from '../data/experiment/expInfo.json';\r\n\r\nimport Edu from \"../blocks/education/Edu\"\r\nimport EduInfoData from '../data/education/eduInfo.json';\r\n\r\nconst Home = () => {\r\n    document.body.classList.add( 'home' );\r\n    document.body.classList.add( 'bg-fixed' );\r\n    document.body.classList.add( 'bg-line' );\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <meta charSet=\"UTF-8\" />\r\n                <title>SeungHeon Doh | MIR Researcher, ML/DL Engineer</title>\r\n                <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎹</text></svg>\"></link>\r\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"description\" content=\"audio, mir, musical informational retrieval\" />\r\n                <meta name=\"keywords\" content=\"audio, mir, musical informational retrieval\" />\r\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\r\n                <meta name=\"googlebot\" content=\"index, follow\" />\r\n                <meta name=\"google\" content=\"notranslate\" />\r\n                <meta name=\"format-detection\" content=\"telephone=no\" />\r\n            </MetaTags>\r\n\r\n            <Header />\r\n\r\n            <main id=\"main\" className=\"site-main\">\r\n                <Prof ProfData={ProfData}/>\r\n                <News NewsInfoData = {NewsInfoData}/>\r\n                <PublicationTable/>\r\n                <Edu EduInfoData = {EduInfoData}/>\r\n                <Exp ExpInfoData = {ExpInfoData}/>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport Header from '../blocks/header/Header';\r\nimport Footer from '../blocks/footer/Footer';\r\n\r\nconst Blog = () => {\r\n    document.body.classList.add( 'blog' );\r\n    document.body.classList.add( 'bg-fixed' );\r\n    document.body.classList.add( 'bg-line' );\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <meta charSet=\"UTF-8\" />\r\n                <title>SeungHeon Doh | MIR Researcher, ML/DL Engineer</title>\r\n                <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎹</text></svg>\"></link>\r\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"description\" content=\"\" />\r\n                <meta name=\"keywords\" content=\"\" />\r\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\r\n                <meta name=\"googlebot\" content=\"index, follow\" />\r\n                <meta name=\"google\" content=\"notranslate\" />\r\n                <meta name=\"format-detection\" content=\"telephone=no\" />\r\n            </MetaTags>\r\n            <Header/>\r\n\r\n            <main id=\"main\" className=\"site-main\">\r\n                <div className=\"wrapper\">\r\n                    <p>Comming Soon</p>\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Blog from './pages/Blog';\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route\n                exact\n                path= \"/\"\n                component={ Home }\n            />\n            <Route\n                path= \"/blog\"\n                component={ Blog }\n            />\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/style.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}